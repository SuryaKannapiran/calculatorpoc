{"ast":null,"code":"// Function to evaluate pricing formulas\nexport const evaluateFormula = (formula, variables) => {\n  try {\n    // Replace variables in the formula with their values\n    let evaluatedFormula = formula;\n    Object.keys(variables).forEach(key => {\n      const regex = new RegExp(`\\\\b${key}\\\\b`, 'g');\n      evaluatedFormula = evaluatedFormula.replace(regex, variables[key]);\n    });\n\n    // Evaluate the formula safely\n    return eval(evaluatedFormula);\n  } catch (error) {\n    console.error('Error evaluating formula:', error);\n    return 0;\n  }\n};\n\n// Calculate plan price\nexport const calculatePlanPrice = (plan, units) => {\n  const variables = {\n    unit: units,\n    unit_price: parseFloat(plan.unit_price)\n  };\n  return evaluateFormula(plan.formula, variables);\n};\n\n// Calculate addon price\nexport const calculateAddonPrice = (addon, units) => {\n  const variables = {\n    unit: units,\n    unit_price: parseFloat(addon.unit_price)\n  };\n  return evaluateFormula(addon.formula, variables);\n};\n\n// Calculate total price including all selected addons\nexport const calculateTotalPrice = (plan, addons, planUnits, addonUnits) => {\n  let total = calculatePlanPrice(plan, planUnits);\n  addons.forEach(addon => {\n    if (addonUnits[addon.id]) {\n      total += calculateAddonPrice(addon, addonUnits[addon.id]);\n    }\n  });\n  return total;\n};","map":{"version":3,"names":["evaluateFormula","formula","variables","evaluatedFormula","Object","keys","forEach","key","regex","RegExp","replace","eval","error","console","calculatePlanPrice","plan","units","unit","unit_price","parseFloat","calculateAddonPrice","addon","calculateTotalPrice","addons","planUnits","addonUnits","total","id"],"sources":["/Users/cb-surya/work/personal_poc/calculatorpoc/src/utils/calculator.js"],"sourcesContent":["// Function to evaluate pricing formulas\nexport const evaluateFormula = (formula, variables) => {\n  try {\n    // Replace variables in the formula with their values\n    let evaluatedFormula = formula;\n    Object.keys(variables).forEach(key => {\n      const regex = new RegExp(`\\\\b${key}\\\\b`, 'g');\n      evaluatedFormula = evaluatedFormula.replace(regex, variables[key]);\n    });\n    \n    // Evaluate the formula safely\n    return eval(evaluatedFormula);\n  } catch (error) {\n    console.error('Error evaluating formula:', error);\n    return 0;\n  }\n};\n\n// Calculate plan price\nexport const calculatePlanPrice = (plan, units) => {\n  const variables = {\n    unit: units,\n    unit_price: parseFloat(plan.unit_price)\n  };\n  \n  return evaluateFormula(plan.formula, variables);\n};\n\n// Calculate addon price\nexport const calculateAddonPrice = (addon, units) => {\n  const variables = {\n    unit: units,\n    unit_price: parseFloat(addon.unit_price)\n  };\n  \n  return evaluateFormula(addon.formula, variables);\n};\n\n// Calculate total price including all selected addons\nexport const calculateTotalPrice = (plan, addons, planUnits, addonUnits) => {\n  let total = calculatePlanPrice(plan, planUnits);\n  \n  addons.forEach(addon => {\n    if (addonUnits[addon.id]) {\n      total += calculateAddonPrice(addon, addonUnits[addon.id]);\n    }\n  });\n  \n  return total;\n}; "],"mappings":"AAAA;AACA,OAAO,MAAMA,eAAe,GAAGA,CAACC,OAAO,EAAEC,SAAS,KAAK;EACrD,IAAI;IACF;IACA,IAAIC,gBAAgB,GAAGF,OAAO;IAC9BG,MAAM,CAACC,IAAI,CAACH,SAAS,CAAC,CAACI,OAAO,CAACC,GAAG,IAAI;MACpC,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,MAAMF,GAAG,KAAK,EAAE,GAAG,CAAC;MAC7CJ,gBAAgB,GAAGA,gBAAgB,CAACO,OAAO,CAACF,KAAK,EAAEN,SAAS,CAACK,GAAG,CAAC,CAAC;IACpE,CAAC,CAAC;;IAEF;IACA,OAAOI,IAAI,CAACR,gBAAgB,CAAC;EAC/B,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,OAAO,CAAC;EACV;AACF,CAAC;;AAED;AACA,OAAO,MAAME,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EACjD,MAAMd,SAAS,GAAG;IAChBe,IAAI,EAAED,KAAK;IACXE,UAAU,EAAEC,UAAU,CAACJ,IAAI,CAACG,UAAU;EACxC,CAAC;EAED,OAAOlB,eAAe,CAACe,IAAI,CAACd,OAAO,EAAEC,SAAS,CAAC;AACjD,CAAC;;AAED;AACA,OAAO,MAAMkB,mBAAmB,GAAGA,CAACC,KAAK,EAAEL,KAAK,KAAK;EACnD,MAAMd,SAAS,GAAG;IAChBe,IAAI,EAAED,KAAK;IACXE,UAAU,EAAEC,UAAU,CAACE,KAAK,CAACH,UAAU;EACzC,CAAC;EAED,OAAOlB,eAAe,CAACqB,KAAK,CAACpB,OAAO,EAAEC,SAAS,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMoB,mBAAmB,GAAGA,CAACP,IAAI,EAAEQ,MAAM,EAAEC,SAAS,EAAEC,UAAU,KAAK;EAC1E,IAAIC,KAAK,GAAGZ,kBAAkB,CAACC,IAAI,EAAES,SAAS,CAAC;EAE/CD,MAAM,CAACjB,OAAO,CAACe,KAAK,IAAI;IACtB,IAAII,UAAU,CAACJ,KAAK,CAACM,EAAE,CAAC,EAAE;MACxBD,KAAK,IAAIN,mBAAmB,CAACC,KAAK,EAAEI,UAAU,CAACJ,KAAK,CAACM,EAAE,CAAC,CAAC;IAC3D;EACF,CAAC,CAAC;EAEF,OAAOD,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}